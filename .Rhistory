text("Genome Feature", x = 0.87, y = 0.97, cex = 1.5) #Add legend title that is aligned with legend
#dev.off() #Turn off plotting device
McapFeatureOverlapMethProps <- data.frame("WBGS" = (McapFeatureOverlaps$WGBSMeth / McapFeatureOverlaps$allCpGs),
"RRBS" = (McapFeatureOverlaps$RRBSMeth / McapFeatureOverlaps$allCpGs),
"MBDBS" = (McapFeatureOverlaps$MBDBSMeth / McapFeatureOverlaps$allCpGs)) #Divide # strong meth loci by all CpGs in a feature to get proportions
McapFeatureOverlapMethProps <- McapFeatureOverlapMethProps * 100 #Multiply by 100 to get percents
row.names(McapFeatureOverlapMethProps) <- row.names(McapFeatureOverlaps) #Assign row names
McapFeatureOverlapMethProps <- McapFeatureOverlapMethProps[-c(1,4),] #Remove genes and total flanks information
head(McapFeatureOverlapMethProps) #Confirm proportions
pdf("../Output/Mcap_union-StrongMeth-CpG-Features.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 5, 1, 1)) #Change figure boundaries
barsMcap <- barplot(t(McapFeatureOverlapMethProps),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,10),
axes = FALSE, names.arg = rep("", times = 5)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsMcap[2,], labels = row.names(McapFeatureOverlapMethProps), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 10, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
dev.off()
#pdf("../Output/Mcap_union-StrongMeth-CpG-Features.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 5, 1, 1)) #Change figure boundaries
barsMcap <- barplot(t(McapFeatureOverlapMethProps),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,10),
axes = FALSE, names.arg = rep("", times = 5)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsMcap[2,], labels = row.names(McapFeatureOverlapMethProps), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 10, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
#dev.off()
pdf("../Output/Mcap_union-StrongMeth-CpG-Features-NoFlanks.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 0, 1, 1)) #Change figure boundaries
barsMcap <- barplot(t(McapFeatureOverlapMethProps[-c(3,4),]),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,10),
axes = FALSE, names.arg = rep("", times = 3)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsMcap[2,], labels = row.names(McapFeatureOverlapMethProps[-c(3,4),]), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 10, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
dev.off()
#pdf("../Output/Mcap_union-StrongMeth-CpG-Features-NoFlanks.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 0, 1, 1)) #Change figure boundaries
barsMcap <- barplot(t(McapFeatureOverlapMethProps[-c(3,4),]),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,10),
axes = FALSE, names.arg = rep("", times = 3)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsMcap[2,], labels = row.names(McapFeatureOverlapMethProps[-c(3,4),]), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 10, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
#dev.off()
PactGenomeFeatures <- read.table("../analyses/Characterizing-CpG-Methylation-5x/Pact/Pact-CGMotif-Overlaps-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with CG motif and feature track overlaps
PactGenomeFeatures <- PactGenomeFeatures[-8,] #Remove final row
tail(PactGenomeFeatures) #Check import
PactGeneOverlaps <- read.table("../analyses/Characterizing-CpG-Methylation-5x-Union/Pact/Pact_union_5x-paGenes-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with all file-gene overlaps
PactGeneOverlaps <- PactGeneOverlaps[-13,] #Remove final row
tail(PactGeneOverlaps) #Confirm import
PactCDSOverlaps <- read.table("../analyses/Characterizing-CpG-Methylation-5x-Union/Pact/Pact_union_5x-paCDS-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with all file-CDS overlaps
PactCDSOverlaps <- PactCDSOverlaps[-13,] #Remove final row
tail(PactCDSOverlaps) #Confirm import
PactIntronsOverlaps <- read.table("../analyses/Characterizing-CpG-Methylation-5x-Union/Pact/Pact_union_5x-paIntron-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with all file-Introns overlaps
PactIntronsOverlaps <- PactIntronsOverlaps[-13,] #Remove final row
tail(PactIntronsOverlaps) #Confirm import
PactFlanksOverlaps <- read.table("../analyses/Characterizing-CpG-Methylation-5x-Union/Pact/Pact_union_5x-paFlanks-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with all file-Introns overlaps
PactFlanksOverlaps <- PactFlanksOverlaps[-13,] #Remove final row
tail(PactFlanksOverlaps) #Confirm import
PactFlanksUpstreamOverlaps <- read.table("../analyses/Characterizing-CpG-Methylation-5x-Union/Pact/Pact_union_5x-paFlanksUpstream-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with all file-Introns overlaps
PactFlanksUpstreamOverlaps <- PactFlanksUpstreamOverlaps[-13,] #Remove final row
tail(PactFlanksUpstreamOverlaps) #Confirm import
PactFlanksDownstreamOverlaps <- read.table("../analyses/Characterizing-CpG-Methylation-5x-Union/Pact/Pact_union_5x-paFlanksDownstream-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with all file-Introns overlaps
PactFlanksDownstreamOverlaps <- PactFlanksDownstreamOverlaps[-13,] #Remove final row
tail(PactFlanksDownstreamOverlaps) #Confirm import
PactIntergenicOverlaps <- read.table("../analyses/Characterizing-CpG-Methylation-5x-Union/Pact/Pact_union_5x-paIntergenic-counts.txt", header = FALSE, col.names = c("counts", "filename")) #Import file with all file-Intergenic overlaps
PactIntergenicOverlaps <- PactIntergenicOverlaps[-13,] #Remove final row
tail(PactIntergenicOverlaps) #Confirm import
PactFeatureOverlaps <- data.frame("allCpGs" = rep(0, times = 7),
"MBDBSMeth" = rep(0, times = 7),
"MBDBSsparseMeth" = rep(0, times = 7),
"MBDBSunMeth" = rep(0, times = 7),
"MBDBS" = rep(0, times = 7),
"RRBSMeth" = rep(0, times = 7),
"RRBSsparseMeth" = rep(0, times = 7),
"RRBSunMeth" = rep(0, times = 7),
"RRBS" = rep(0, times = 7),
"WGBSMeth" = rep(0, times = 7),
"WGBSsparseMeth" = rep(0, times = 7),
"WGBSunMeth" = rep(0, times = 7),
"WGBS" = rep(0, times = 7)) #Create blank dataframe with information for various CpG categories and methylation status. Match columns to the order of columns in the overlap count files
row.names(PactFeatureOverlaps) <- c("Genes", "CDS", "Introns", "Flanks", "Upstream Flanks", "Downstream Flanks", "Intergenic") #Assign row names
head(PactFeatureOverlaps) #Confirm changes
PactFeatureOverlaps$allCpGs <- c(PactGenomeFeatures$counts[5],
PactGenomeFeatures$counts[1],
PactGenomeFeatures$counts[7],
PactGenomeFeatures$counts[3],
PactGenomeFeatures$counts[4],
PactGenomeFeatures$counts[2],
PactGenomeFeatures$counts[6]) #Assign information for CG motif overlaps with genome features. Use 0 for totalLines
head(PactFeatureOverlaps) #Confirm modification
PactFeatureOverlaps$allCpGs <- c(PactGenomeFeatures$counts[5],
PactGenomeFeatures$counts[1],
PactGenomeFeatures$counts[7],
PactGenomeFeatures$counts[3],
PactGenomeFeatures$counts[4],
PactGenomeFeatures$counts[2],
PactGenomeFeatures$counts[6]) #Assign information for CG motif overlaps with genome features. Use 0 for totalLines
head(PactFeatureOverlaps) #Confirm modification
for (i in 1:length(PactGeneOverlaps$counts)) {
PactFeatureOverlaps[1,i+1] <- PactGeneOverlaps[i,1]
PactFeatureOverlaps[2,i+1] <- PactCDSOverlaps[i,1]
PactFeatureOverlaps[3,i+1] <- PactIntronsOverlaps[i,1]
PactFeatureOverlaps[4,i+1] <- PactFlanksOverlaps[i,1]
PactFeatureOverlaps[5,i+1] <- PactFlanksUpstreamOverlaps[i,1]
PactFeatureOverlaps[6,i+1] <- PactFlanksDownstreamOverlaps[i,1]
PactFeatureOverlaps[7,i+1] <- PactIntergenicOverlaps[i,1]
} #For each table with feature overlap information, paste the contents of the count column in the assigned row
tail(PactFeatureOverlaps) #Check summary table
PactFeatureOverlapsPercents <- PactFeatureOverlaps[-c(1,4),] #Duplicate dataframe but remove gene and total flank rows
for (i in 1:length(PactFeatureOverlaps)) {
PactFeatureOverlapsPercents[,i] <- (PactFeatureOverlapsPercents[,i] / (sum(PactFeatureOverlapsPercents[,i]))) * 100
} #Divide every entry by sum of the column and multiply by 100 to get percentages. Do not include gene information
head(PactFeatureOverlapsPercents) #Check calculations
pdf("../Output/Pact_union-CpG-Features.pdf", height = 8.5, width = 11)
par(mar = c(2,5,0,1), oma = c(1, 1, 0, 11)) #Change figure boundaries
barplot(t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)])),
col= "white",
axes = FALSE,
names.arg = c("Genome", "WGBS", "RRBS", "MBD-BS"), cex.names = 1.5,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 1:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)]))
xx[,-i] <- NA
colnames(xx)[-i] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% CpGs", line = 3, cex = 1.5) #Add y-axis label
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE) #Create new plot
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n") #Add new plot on top of current plot
legend(x = 0.57, y = 0.87,
xpd = TRUE,
legend = c("CDS", "Introns", "Upstream Flank", "Downstream Flank", "Intergenic"),
pch = 22,
col = "black",
pt.bg = c("grey20", "grey40", "grey60", "grey80", "grey100"),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
text("Genome Feature", x = 0.785, y = 0.879, cex = 1.5) #Add legend title that is aligned with legend
dev.off() #Turn off plotting device
#pdf("../Output/Pact_union-CpG-Features.pdf", height = 8.5, width = 11)
par(mar = c(2,5,0,1), oma = c(1, 1, 0, 11)) #Change figure boundaries
barplot(t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)])),
col= "white",
axes = FALSE,
names.arg = c("Genome", "WGBS", "RRBS", "MBD-BS"), cex.names = 1.5,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 1:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)]))
xx[,-i] <- NA
colnames(xx)[-i] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% CpGs", line = 3, cex = 1.5) #Add y-axis label
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE) #Create new plot
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n") #Add new plot on top of current plot
legend(x = 0.57, y = 0.87,
xpd = TRUE,
legend = c("CDS", "Introns", "Upstream Flank", "Downstream Flank", "Intergenic"),
pch = 22,
col = "black",
pt.bg = c("grey20", "grey40", "grey60", "grey80", "grey100"),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
text("Genome Feature", x = 0.785, y = 0.879, cex = 1.5) #Add legend title that is aligned with legend
#dev.off() #Turn off plotting device
pdf("../Output/Pact_union-CpG-Features-MethStatus.pdf", height = 8.5, width = 11)
par(mar = c(1,5,0,1), oma = c(4, 1, 1, 11), mfcol = c(3,1)) #Change figure boundaries
#High methylation
barplot(t(t(PactFeatureOverlapsPercents[,c(10,6,2)])),
col= "white",
axes = FALSE,
names.arg = c("", "", ""),
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Set y-axis specs.
for (i in 2:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(10,6,2)]))
xx[,-(i-1)] <- NA
colnames(xx)[-(i-1)] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% High", line = 3, cex = 1.5) #Add y-axis label
#Moderate methylation
barplot(t(t(PactFeatureOverlapsPercents[,c(11,7,3)])),
col= "white",
axes = FALSE,
names.arg = c("", "", ""),
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 2:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(11,7,3)]))
xx[,-(i-1)] <- NA
colnames(xx)[-(i-1)] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% Moderate", line = 3, cex = 1.5) #Add y-axis label
#Low methylation
barplot(t(t(PactFeatureOverlapsPercents[,c(12,8,4)])),
col= "white",
axes = FALSE,
names.arg = c("WGBS", "RRBS", "MBD-BS"), cex.names = 2,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 2:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(12,8,4)]))
xx[,-(i-1)] <- NA
colnames(xx)[-(i-1)] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% Low", line = 3, cex = 1.5) #Add y-axis label
#Add legend
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE) #Create new plot
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n") #Add new plot on top of current plot
legend(x = 0.73, y = 0.97,
xpd = TRUE,
legend = c("CDS", "Introns", "Upstream Flank", "Downstream Flank", "Intergenic"),
pch = 22,
col = "black",
pt.bg = c("grey20", "grey40", "grey60", "grey80", "grey100"),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
text("Genome Feature", x = 0.87, y = 0.97, cex = 1.5) #Add legend title that is aligned with legend
dev.off() #Turn off plotting device
#pdf("../Output/Pact_union-CpG-Features-MethStatus.pdf", height = 8.5, width = 11)
par(mar = c(1,5,0,1), oma = c(4, 1, 1, 11), mfcol = c(3,1)) #Change figure boundaries
#High methylation
barplot(t(t(PactFeatureOverlapsPercents[,c(10,6,2)])),
col= "white",
axes = FALSE,
names.arg = c("", "", ""),
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Set y-axis specs.
for (i in 2:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(10,6,2)]))
xx[,-(i-1)] <- NA
colnames(xx)[-(i-1)] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% High", line = 3, cex = 1.5) #Add y-axis label
#Moderate methylation
barplot(t(t(PactFeatureOverlapsPercents[,c(11,7,3)])),
col= "white",
axes = FALSE,
names.arg = c("", "", ""),
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 2:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(11,7,3)]))
xx[,-(i-1)] <- NA
colnames(xx)[-(i-1)] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% Moderate", line = 3, cex = 1.5) #Add y-axis label
#Low methylation
barplot(t(t(PactFeatureOverlapsPercents[,c(12,8,4)])),
col= "white",
axes = FALSE,
names.arg = c("WGBS", "RRBS", "MBD-BS"), cex.names = 2,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 2:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(12,8,4)]))
xx[,-(i-1)] <- NA
colnames(xx)[-(i-1)] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% Low", line = 3, cex = 1.5) #Add y-axis label
#Add legend
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE) #Create new plot
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n") #Add new plot on top of current plot
legend(x = 0.73, y = 0.97,
xpd = TRUE,
legend = c("CDS", "Introns", "Upstream Flank", "Downstream Flank", "Intergenic"),
pch = 22,
col = "black",
pt.bg = c("grey20", "grey40", "grey60", "grey80", "grey100"),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
text("Genome Feature", x = 0.87, y = 0.97, cex = 1.5) #Add legend title that is aligned with legend
#dev.off() #Turn off plotting device
PactFeatureOverlapMethProps <- data.frame("WBGS" = (PactFeatureOverlaps$WGBSMeth / PactFeatureOverlaps$allCpGs),
"RRBS" = (PactFeatureOverlaps$RRBSMeth / PactFeatureOverlaps$allCpGs),
"MBDBS" = (PactFeatureOverlaps$MBDBSMeth / PactFeatureOverlaps$allCpGs)) #Divide # strong meth loci by all CpGs in a feature to get proportions
PactFeatureOverlapMethProps <- PactFeatureOverlapMethProps * 100 #Multiply by 100 to get percents
row.names(PactFeatureOverlapMethProps) <- row.names(PactFeatureOverlaps) #Assign row names
PactFeatureOverlapMethProps <- PactFeatureOverlapMethProps[-c(1,4),] #Remove genes and total flanks information
head(PactFeatureOverlapMethProps) #Confirm proportions
pdf("../Output/Pact_union-StrongMeth-CpG-Features.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 5, 1, 1)) #Change figure boundaries
barsPact <- barplot(t(PactFeatureOverlapMethProps),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,20),
axes = FALSE, names.arg = rep("", times = 5)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsPact[2,], labels = row.names(PactFeatureOverlapMethProps), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 20, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
dev.off()
#pdf("../Output/Pact_union-StrongMeth-CpG-Features.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 5, 1, 1)) #Change figure boundaries
barsPact <- barplot(t(PactFeatureOverlapMethProps),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,20),
axes = FALSE, names.arg = rep("", times = 5)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsPact[2,], labels = row.names(PactFeatureOverlapMethProps), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 20, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
#dev.off()
pdf("../Output/Pact_union-StrongMeth-CpG-Features-NoFlanks.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 0, 1, 1)) #Change figure boundaries
barsPact <- barplot(t(PactFeatureOverlapMethProps[-c(3,4),]),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,20),
axes = FALSE, names.arg = rep("", times = 3)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsPact[2,], labels = row.names(PactFeatureOverlapMethProps[-c(3,4),]), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 20, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
dev.off()
#pdf("../Output/Pact_union-StrongMeth-CpG-Features-NoFlanks.pdf", width = 11, height = 8.5) #Save file
par(mar = c(5, 8, 1, 1),  oma = c(1, 0, 1, 1)) #Change figure boundaries
barsPact <- barplot(t(PactFeatureOverlapMethProps[-c(3,4),]),
beside = TRUE, horiz = TRUE,
col = c(plotColors2[7], plotColors2[12], plotColors2[17]),
xlim = c(0,20),
axes = FALSE, names.arg = rep("", times = 3)) #Create a horizontal barplot with comparative proportions. Color based on sequencing method and do not include any axes. Use blanks as y-axis labels. Save barplot information.
axis(side = 2, at = barsPact[2,], labels = row.names(PactFeatureOverlapMethProps[-c(3,4),]), tick = FALSE, las = 2, col = "grey80", cex.axis = 1.5) #Add y-axis labels at the center of grouped bars. Remove tick marks and change label orientation.
axis(side = 1, at = seq(from = 0, to = 20, by = 2), cex = 1.2, col = "grey80") #Add x-axis
mtext(side = 1, "Strongly Methylated CpGs/All CpGs (%)", line = 3, cex = 1.5) #Add x-axis label
legend("topright",
xpd = TRUE,
legend = c("WGBS", "RRBS", "MBD-BS"),
pch = 22,
col = "black",
pt.bg = c(plotColors2[7], plotColors2[12], plotColors2[17]),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
#dev.off()
pdf("../Output/Union-CpG-Features-Multipanel.pdf", height = 8.5, width = 11)
par(mar = c(1,5,1,0), oma = c(2, 1, 0, 12), mfrow = c(2,1)) #Change figure boundaries
#Mcap
barplot(t(t(McapFeatureOverlapsPercents[,c(1,13,9,5)])),
col= "white",
axes = FALSE,
names.arg = c("", "", "", ""), cex.names = 1.5,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 1:4) {
xx <- t(t(McapFeatureOverlapsPercents[,c(1,13,9,5)]))
xx[,-i] <- NA
colnames(xx)[-i] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% CpGs", line = 3, cex = 1.5) #Add y-axis label
text(expression(paste("a. ", italic("M. capitata"))), x = 0.06, y = 105, cex = 1.2, adj = 0) #Add italics species name
#Pact
barplot(t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)])),
col= "white",
axes = FALSE,
names.arg = c("Genome", "WGBS", "RRBS", "MBD-BS"), cex.names = 1.5,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 1:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)]))
xx[,-i] <- NA
colnames(xx)[-i] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% CpGs", line = 3, cex = 1.5) #Add y-axis label
text(expression(paste("b. ", italic("P. acuta"))), x = 0.06, y = 105, cex = 1.2, adj = 0) #Add italics species name
#Add legend
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE) #Create new plot
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n") #Add new plot on top of current plot
legend(x = 0.57, y = 0.91,
xpd = TRUE,
legend = c("CDS", "Introns", "Upstream Flank", "Downstream Flank", "Intergenic"),
pch = 22,
col = "black",
pt.bg = c("grey20", "grey40", "grey60", "grey80", "grey100"),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
text("Genome Feature", x = 0.785, y = 0.92, cex = 1.5) #Add legend title that is aligned with legend
dev.off() #Turn off plotting device
#pdf("../Output/Union-CpG-Features-Multipanel.pdf", height = 8.5, width = 11)
par(mar = c(1,5,1,0), oma = c(2, 1, 0, 12), mfrow = c(2,1)) #Change figure boundaries
#Mcap
barplot(t(t(McapFeatureOverlapsPercents[,c(1,13,9,5)])),
col= "white",
axes = FALSE,
names.arg = c("", "", "", ""), cex.names = 1.5,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 1:4) {
xx <- t(t(McapFeatureOverlapsPercents[,c(1,13,9,5)]))
xx[,-i] <- NA
colnames(xx)[-i] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% CpGs", line = 3, cex = 1.5) #Add y-axis label
text(expression(paste("a. ", italic("M. capitata"))), x = 0.06, y = 105, cex = 1.2, adj = 0) #Add italics species name
#Pact
barplot(t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)])),
col= "white",
axes = FALSE,
names.arg = c("Genome", "WGBS", "RRBS", "MBD-BS"), cex.names = 1.5,
ylim = c(0, 110)) #Create base plot. Everything should be white. Do not plot axes. Include sequencing type as labels and set size. Set y-axis specs.
for (i in 1:4) {
xx <- t(t(PactFeatureOverlapsPercents[,c(1,13,9,5)]))
xx[,-i] <- NA
colnames(xx)[-i] <- NA
barplot(xx, col = c(plotColors2[(5*i)-4], plotColors2[(5*i)-3], plotColors2[(5*i)-2], plotColors2[(5*i)-1], plotColors2[(5*i)]), add = TRUE, axes = FALSE, names.arg = c("", "", "", ""))
} #Make each bar in the stacked barplot a different color gradient. Create a new dataframe with data for the plot and ignore all additional columns and column names. Plot the single bar with the correct color from plotColors. Do not add axes and add blank names for each column.
axis(side = 2, at = seq(0, 100, by = 10), las = 2, col = "grey80", cex.axis = 1.2) #Add y-axis
mtext(side = 2, "% CpGs", line = 3, cex = 1.5) #Add y-axis label
text(expression(paste("b. ", italic("P. acuta"))), x = 0.06, y = 105, cex = 1.2, adj = 0) #Add italics species name
#Add legend
par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE) #Create new plot
plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n") #Add new plot on top of current plot
legend(x = 0.57, y = 0.91,
xpd = TRUE,
legend = c("CDS", "Introns", "Upstream Flank", "Downstream Flank", "Intergenic"),
pch = 22,
col = "black",
pt.bg = c("grey20", "grey40", "grey60", "grey80", "grey100"),
bty = "n",
cex = 1.5,
x.intersp = 0.7, xjust = 0) #Place a legend in the top right of the figure with no box
text("Genome Feature", x = 0.785, y = 0.92, cex = 1.5) #Add legend title that is aligned with legend
#dev.off() #Turn off plotting device
plotColors2
plotColors
